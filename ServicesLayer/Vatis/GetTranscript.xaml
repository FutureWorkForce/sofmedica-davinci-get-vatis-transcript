<Activity mc:Ignorable="sap sap2010" x:Class="GetTranscript" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_file" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_transacript" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>869.6,1322.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTranscript_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>RestSharp</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>RestSharp</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.NetworkInformation</AssemblyReference>
      <AssemblyReference>System.Net.Ping</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetTranscript" sap:VirtualizedContainerService.HintSize="547.2,1257.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="vatisToken" />
      <Variable x:TypeArguments="x:String" Name="vatisTokenString" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start GetTranscript&quot;]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484.8,333.6" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,255.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;vatisToken&quot;).ToString()]" CacheStrategy="None" DisplayName="Get Credential vatisToken" FolderPath="[in_Config(&quot;OrchestratorFolderPath&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="387.2,143.2" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[vatisToken]" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Assign DisplayName="Assign vatisTokenString" sap:VirtualizedContainerService.HintSize="484.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[vatisTokenString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("vatisToken").ToString()]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch get vatis transcript" sap:VirtualizedContainerService.HintSize="484.8,396" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="//Define client  options&#xD;&#xA;var options = new RestClientOptions(in_Config[&quot;vatisBaseUrl&quot;].ToString())&#xD;&#xA;{&#xD;&#xA;  MaxTimeout = -1,&#xD;&#xA;};&#xD;&#xA;RestClient client = new RestClient(options);&#xD;&#xA;&#xD;&#xA;////Submit file for transcription&#xD;&#xA;RestRequest transcribeRequest = new RestRequest(in_Config[&quot;transcribeEndPoint&quot;].ToString(),&#xD;&#xA;&#x9;Method.Post);&#xD;&#xA;string  bearerToken = string.Format(&quot;Bearer {0}&quot;, in_vatisToken);&#xD;&#xA;transcribeRequest.AddHeader(&quot;Authorization&quot;, bearerToken);&#xD;&#xA;transcribeRequest.AlwaysMultipartFormData = true;&#xD;&#xA;transcribeRequest.AddFile(&quot;file&quot;, in_file);&#xD;&#xA;transcribeRequest.AddParameter(&quot;language&quot;, &quot;ro_RO&quot;);&#xD;&#xA;RestResponse transcribeResponse =  client.Execute(transcribeRequest);&#xD;&#xA;Dictionary&lt;string, string&gt; transcribeResponseContent = JsonConvert.DeserializeObject&lt;Dictionary&lt;string, string&gt;&gt;(&#xD;&#xA;&#x9;transcribeResponse.Content);&#xD;&#xA;&#xD;&#xA;//Get transcript text&#xD;&#xA;RestRequest getTranscriptionRequest = new RestRequest(&#xD;&#xA;&#x9;String.Format(in_Config[&quot;getTransacriptionEndPoint&quot;].ToString(),&#xD;&#xA;&#x9;transcribeResponseContent[&quot;uid&quot;]),&#xD;&#xA;&#x9;Method.Post);&#xD;&#xA;getTranscriptionRequest.AddHeader(&quot;Authorization&quot;, bearerToken);&#xD;&#xA;RestResponse getTranscriptionResponse ;&#xD;&#xA;int currentAttempt = 0;&#xD;&#xA;&#xD;&#xA;//While response code is not successful try to get transcription &#xD;&#xA;//Max no. of attempts = 10&#xD;&#xA;do{&#xD;&#xA;System.Threading.Thread.Sleep(3000);&#xD;&#xA;getTranscriptionResponse = client.Execute(getTranscriptionRequest);&#xD;&#xA;Console.WriteLine(getTranscriptionResponse.Content);&#xD;&#xA;currentAttempt += 1; &#xD;&#xA;&#xD;&#xA;Console.WriteLine(Convert.ToInt32(getTranscriptionResponse.StatusCode).ToString());&#xD;&#xA;}&#xD;&#xA;while(Convert.ToInt32(getTranscriptionResponse.StatusCode) != 200 &amp;&amp; currentAttempt &lt;= 10 );&#xD;&#xA;&#xD;&#xA;Dictionary&lt;string, object&gt; transcriptionResponse = JsonConvert.DeserializeObject&lt;Dictionary&lt;string, object&gt;&gt;(getTranscriptionResponse.Content);&#xD;&#xA;&#xD;&#xA;//Get transcription text from list of words&#xD;&#xA;if(transcriptionResponse[&quot;status&quot;].ToString().Equals(&quot;TRANSCRIPTED&quot;)){&#xD;&#xA;&#x9; List&lt;string&gt; words = JsonConvert.DeserializeObject&lt;Dictionary&lt;string, List&lt;Dictionary&lt;string, string&gt;&gt;&gt;&gt;(&#xD;&#xA;&#x9;&#x9;JsonConvert.DeserializeObject(transcriptionResponse[&quot;data&quot;].ToString()).ToString())[&quot;words&quot;].Select(&#xD;&#xA;&#x9;&#x9;x =&gt; x[&quot;word&quot;]).ToList();&#xD;&#xA;&#xD;&#xA;&#x9;out_transcript = string.Join(&quot; &quot;, words);&#xD;&#xA;}&#xD;&#xA;else {&#xD;&#xA; out_transcript = &quot;&quot;;&#x9;&#xD;&#xA;}" DisplayName="Invoke Code get vatis transcript" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_file">[in_file]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_vatisToken">[vatisTokenString]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_transcript">[out_transacript]</OutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Log inner exception and throw" sap:VirtualizedContainerService.HintSize="449.6,335.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message inner exception details" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[String.Format(&quot;Exception {0} at {1}; Source: {2}&quot;,  exception.InnerException.Message, exception.InnerException.Source, exception.InnerException.StackTrace)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Throw DisplayName="Throw InnerException" Exception="[exception.InnerException]" sap:VirtualizedContainerService.HintSize="387.2,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Assign DisplayName="Assign vatisTokenString - to reduce variable scope" sap:VirtualizedContainerService.HintSize="484.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[vatisTokenString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>